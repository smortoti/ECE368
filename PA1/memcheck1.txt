==18189== Memcheck, a memory error detector
==18189== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==18189== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==18189== Command: ./pa1 -l examples/1K.b output1Kl
==18189== Parent PID: 18176
==18189== 
==18189== Conditional jump or move depends on uninitialised value(s)
==18189==    at 0x400BF6: addNode (shell_list.c:20)
==18189==    by 0x400CBE: List_Load_From_File (shell_list.c:53)
==18189==    by 0x4012AB: main (pa1.c:61)
==18189== 
==18189== Invalid read of size 8
==18189==    at 0x400E6D: List_Shellsort (shell_list.c:113)
==18189==    by 0x4012E0: main (pa1.c:64)
==18189==  Address 0x8 is not stack'd, malloc'd or (recently) free'd
==18189== 
==18189== 
==18189== Process terminating with default action of signal 11 (SIGSEGV)
==18189==  Access not within mapped region at address 0x8
==18189==    at 0x400E6D: List_Shellsort (shell_list.c:113)
==18189==    by 0x4012E0: main (pa1.c:64)
==18189==  If you believe this happened as a result of a stack
==18189==  overflow in your program's main thread (unlikely but
==18189==  possible), you can try to increase the size of the
==18189==  main thread stack using the --main-stacksize= flag.
==18189==  The main thread stack size used in this run was 8388608.
==18189== 
==18189== HEAP SUMMARY:
==18189==     in use at exit: 16,584 bytes in 1,002 blocks
==18189==   total heap usage: 1,004 allocs, 2 frees, 17,168 bytes allocated
==18189== 
==18189== 16 bytes in 1 blocks are definitely lost in loss record 1 of 3
==18189==    at 0x4C29EA3: malloc (vg_replace_malloc.c:309)
==18189==    by 0x400CFA: List_Load_From_File (shell_list.c:58)
==18189==    by 0x4012AB: main (pa1.c:61)
==18189== 
==18189== 568 bytes in 1 blocks are still reachable in loss record 2 of 3
==18189==    at 0x4C29EA3: malloc (vg_replace_malloc.c:309)
==18189==    by 0x4EA5B6C: __fopen_internal (iofopen.c:69)
==18189==    by 0x4010F2: main (pa1.c:23)
==18189== 
==18189== 16,000 bytes in 1,000 blocks are still reachable in loss record 3 of 3
==18189==    at 0x4C29EA3: malloc (vg_replace_malloc.c:309)
==18189==    by 0x400BD0: addNode (shell_list.c:15)
==18189==    by 0x400CBE: List_Load_From_File (shell_list.c:53)
==18189==    by 0x4012AB: main (pa1.c:61)
==18189== 
==18189== LEAK SUMMARY:
==18189==    definitely lost: 16 bytes in 1 blocks
==18189==    indirectly lost: 0 bytes in 0 blocks
==18189==      possibly lost: 0 bytes in 0 blocks
==18189==    still reachable: 16,568 bytes in 1,001 blocks
==18189==         suppressed: 0 bytes in 0 blocks
==18189== 
==18189== For counts of detected and suppressed errors, rerun with: -v
==18189== Use --track-origins=yes to see where uninitialised values come from
==18189== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
