==20588== Memcheck, a memory error detector
==20588== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==20588== Using Valgrind-3.14.0-353a3587bb-20181007X and LibVEX; rerun with -h for copyright info
==20588== Command: ./pa2 original/binary1 freqOutput6 headOutput6 codeOutput6 treeOutput6
==20588== Parent PID: 20587
==20588== 
--20588-- 
--20588-- Valgrind options:
--20588--    --dsymutil=yes
--20588--    --tool=memcheck
--20588--    --leak-check=full
--20588--    --verbose
--20588--    --show-leak-kinds=all
--20588--    --track-origins=yes
--20588--    --log-file=memcheck1.txt
--20588-- Contents of /proc/version:
--20588--   Linux version 3.10.0-1062.18.1.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC) ) #1 SMP Tue Mar 17 23:49:17 UTC 2020
--20588-- 
--20588-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2-bmi
--20588-- Page sizes: currently 4096, max supported 4096
--20588-- Valgrind library directory: /usr/lib64/valgrind
--20588-- Reading syms from /home/shay/a/lewis446/ECE368/ECE368/PA2/pa2
--20588-- Reading syms from /usr/lib64/ld-2.17.so
--20588-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--20588--    object doesn't have a symbol table
--20588--    object doesn't have a dynamic symbol table
--20588-- Scheduler: using generic scheduler lock implementation.
--20588-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==20588== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-20588-by-lewis446-on-ecegrid-thin7.ecn.purdue.edu
==20588== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-20588-by-lewis446-on-ecegrid-thin7.ecn.purdue.edu
==20588== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-20588-by-lewis446-on-ecegrid-thin7.ecn.purdue.edu
==20588== 
==20588== TO CONTROL THIS PROCESS USING vgdb (which you probably
==20588== don't want to do, unless you know exactly what you're doing,
==20588== or are doing some strange experiment):
==20588==   /usr/lib64/valgrind/../../bin/vgdb --pid=20588 ...command...
==20588== 
==20588== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==20588==   /path/to/gdb ./pa2
==20588== and then give GDB the following command
==20588==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=20588
==20588== --pid is optional if only one valgrind process is running
==20588== 
--20588-- REDIR: 0x4019df0 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c66c5 (???)
--20588-- REDIR: 0x4019bc0 (ld-linux-x86-64.so.2:index) redirected to 0x580c66df (???)
--20588-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--20588-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
==20588== WARNING: new redirection conflicts with existing -- ignoring it
--20588--     old: 0x04019df0 (strlen              ) R-> (0000.0) 0x580c66c5 ???
--20588--     new: 0x04019df0 (strlen              ) R-> (2007.0) 0x04c2d0e0 strlen
--20588-- REDIR: 0x4019d70 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c2e230 (strcmp)
--20588-- REDIR: 0x401aa30 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c31de0 (mempcpy)
--20588-- Reading syms from /usr/lib64/libc-2.17.so
--20588-- REDIR: 0x4ec70e0 (libc.so.6:strcasecmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--20588-- REDIR: 0x4ec3e60 (libc.so.6:strnlen) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--20588-- REDIR: 0x4ec93b0 (libc.so.6:strncasecmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--20588-- REDIR: 0x4ec68c0 (libc.so.6:memset) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--20588-- REDIR: 0x4ec6870 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--20588-- REDIR: 0x4ec5850 (libc.so.6:__GI_strrchr) redirected to 0x4c2caa0 (__GI_strrchr)
--20588-- REDIR: 0x4ebca90 (libc.so.6:malloc) redirected to 0x4c29e1c (malloc)
--20588-- REDIR: 0x4edc8d0 (libc.so.6:__GI_strstr) redirected to 0x4c32070 (__strstr_sse2)
--20588-- REDIR: 0x4ebceb0 (libc.so.6:free) redirected to 0x4c2af16 (free)
--20588-- REDIR: 0x4ec6a90 (libc.so.6:__GI_mempcpy) redirected to 0x4c31b10 (__GI_mempcpy)
--20588-- REDIR: 0x4ecd370 (libc.so.6:strchrnul) redirected to 0x4c31900 (strchrnul)
==20588== Invalid read of size 8
==20588==    at 0x40193C: Compress (hufftree.c:666)
==20588==    by 0x401DF8: main (pa2.c:39)
==20588==  Address 0x10 is not stack'd, malloc'd or (recently) free'd
==20588== 
==20588== 
==20588== Process terminating with default action of signal 11 (SIGSEGV)
==20588==  Access not within mapped region at address 0x10
==20588==    at 0x40193C: Compress (hufftree.c:666)
==20588==    by 0x401DF8: main (pa2.c:39)
==20588==  If you believe this happened as a result of a stack
==20588==  overflow in your program's main thread (unlikely but
==20588==  possible), you can try to increase the size of the
==20588==  main thread stack using the --main-stacksize= flag.
==20588==  The main thread stack size used in this run was 8388608.
==20588== 
==20588== HEAP SUMMARY:
==20588==     in use at exit: 32,256 bytes in 767 blocks
==20588==   total heap usage: 26,197 allocs, 25,430 frees, 642,720 bytes allocated
==20588== 
==20588== Searching for pointers to 767 not-freed blocks
==20588== Checked 111,904 bytes
==20588== 
==20588== 48 bytes in 1 blocks are still reachable in loss record 1 of 7
==20588==    at 0x4C29EA3: malloc (vg_replace_malloc.c:309)
==20588==    by 0x40119C: Build_Tree (hufftree.c:387)
==20588==    by 0x401D6E: main (pa2.c:28)
==20588== 
==20588== 568 bytes in 1 blocks are still reachable in loss record 2 of 7
==20588==    at 0x4C29EA3: malloc (vg_replace_malloc.c:309)
==20588==    by 0x4EA5B6C: __fopen_internal (in /usr/lib64/libc-2.17.so)
==20588==    by 0x40166C: Compress (hufftree.c:556)
==20588==    by 0x401DF8: main (pa2.c:39)
==20588== 
==20588== 568 bytes in 1 blocks are still reachable in loss record 3 of 7
==20588==    at 0x4C29EA3: malloc (vg_replace_malloc.c:309)
==20588==    by 0x4EA5B6C: __fopen_internal (in /usr/lib64/libc-2.17.so)
==20588==    by 0x4016A6: Compress (hufftree.c:563)
==20588==    by 0x401DF8: main (pa2.c:39)
==20588== 
==20588== 568 bytes in 1 blocks are still reachable in loss record 4 of 7
==20588==    at 0x4C29EA3: malloc (vg_replace_malloc.c:309)
==20588==    by 0x4EA5B6C: __fopen_internal (in /usr/lib64/libc-2.17.so)
==20588==    by 0x4016E3: Compress (hufftree.c:570)
==20588==    by 0x401DF8: main (pa2.c:39)
==20588== 
==20588== 6,120 bytes in 255 blocks are still reachable in loss record 5 of 7
==20588==    at 0x4C29EA3: malloc (vg_replace_malloc.c:309)
==20588==    by 0x4008FB: Add_Node (hufftree.c:39)
==20588==    by 0x4008BA: Read_From_File (hufftree.c:27)
==20588==    by 0x401D11: main (pa2.c:17)
==20588== 
==20588== 12,144 bytes in 253 blocks are still reachable in loss record 6 of 7
==20588==    at 0x4C29EA3: malloc (vg_replace_malloc.c:309)
==20588==    by 0x400D58: Merge_Tree (hufftree.c:239)
==20588==    by 0x401157: Build_Tree (hufftree.c:381)
==20588==    by 0x401D6E: main (pa2.c:28)
==20588== 
==20588== 12,240 bytes in 255 blocks are still reachable in loss record 7 of 7
==20588==    at 0x4C29EA3: malloc (vg_replace_malloc.c:309)
==20588==    by 0x400CEE: Add_TreeNode (hufftree.c:225)
==20588==    by 0x401090: Build_Tree (hufftree.c:357)
==20588==    by 0x401D6E: main (pa2.c:28)
==20588== 
==20588== LEAK SUMMARY:
==20588==    definitely lost: 0 bytes in 0 blocks
==20588==    indirectly lost: 0 bytes in 0 blocks
==20588==      possibly lost: 0 bytes in 0 blocks
==20588==    still reachable: 32,256 bytes in 767 blocks
==20588==         suppressed: 0 bytes in 0 blocks
==20588== 
==20588== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==20588== 
==20588== 1 errors in context 1 of 1:
==20588== Invalid read of size 8
==20588==    at 0x40193C: Compress (hufftree.c:666)
==20588==    by 0x401DF8: main (pa2.c:39)
==20588==  Address 0x10 is not stack'd, malloc'd or (recently) free'd
==20588== 
==20588== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
